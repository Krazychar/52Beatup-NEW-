<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ace_idle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>p1</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.2
image_index=0
room_speed=60
attacking=0
OTG=false
image_yscale=4  
global.p1char="Ace"
OutlineCol=c_black;
timer=0
idle=spr_ace_idle//important for resuming round
hsp=0
vsp=0
block=0
hitstun=0
blockstun=0
grav=0.5
grounded=0
hboxhit=0
dashtime=0
angle=0
ImagePL=sprite_index
//special move variables
link=false
linktime=0
linkdir=keyboard_check_direct(vk_up)
linkatk=keyboard_check_direct(vk_up)
linkspr=0
FBlv=1
RDlv=1
//battle variables
agi=5
dashing=0
dashdirection=0
dashcheck=0
freakingslickdash=0
dashtimerfinal=0
cancel=0
hp=170
mhp=hp
atk=1
abi=7
mabi=abi
projdef=0
dashlng=12
dashspd=18
rage=false
nKb=false
coward=false
pH=agi
fastSpec=0
damage=0
hstun=0
hit=0
xpos=0
ypos=0
xscal=1
yscal=1
launchh=false
airMovementDir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_ace</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OTG (Off the ground)
if(OTG=true)
{hitstun=0}
if(OTG=true &amp;&amp; !place_meeting(x,y+4,ground))
{
hsp=-1*image_xscale
sprite_index=spr_ace_hit3
}

if(OTG=true &amp;&amp; place_meeting(x,y+4,ground) &amp;&amp; attacking!=5)
{
hsp=0
vsp=0
attacking=5
sprite_index=spr_ace_ground
image_index=0
instance_create(x-15,y+80,obj_groundbits)
instance_create(x-20,y+80,obj_groundbits)
instance_create(x-10,y+80,obj_groundbits)
instance_create(x+10,y+80,obj_groundbits)
instance_create(x+20,y+80,obj_groundbits)
instance_create(x+15,y+80,obj_groundbits)

}

if(sprite_index==spr_ace_ground &amp;&amp; image_index&gt;=12)
{
sprite_index=spr_ace_getup
image_index=0
}

if(sprite_index==spr_ace_getup &amp;&amp; image_index&gt;=4)
{
OTG=false
sprite_index=spr_ace_idle
attacking=0
global.p1combo=0
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.roundEnd</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player collison


if(place_meeting(p1.x,p1.y,p2) || place_meeting(p2.x,p2.y,p1))
{
//checks who's closer to the middle
if(abs(p1.x - round(room_width/2)) &lt; abs(p2.x - round(room_width/2)))
{
if(p1.x &gt; room_width/2) p1.x-=5
else p1.x+=5
}
else
{
if(p2.x &gt; room_width/2) p2.x-=5
else p2.x+=5
}

}
else
{}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking
light=keyboard_check_pressed(ord("J"))
heavy=keyboard_check_pressed(ord("K"))
launch=keyboard_check_pressed(ord("L"))
//face direction

if(grounded=1 &amp;&amp; attacking=0)
{

if(x &gt; p2.x)
{image_xscale=-4}
else
{image_xscale=4}

}

//if(attacking=1 &amp;&amp; place_meeting(x,y+1,ground) &amp;&amp; dashing=0) hsp=0
if((sprite_index=spr_ace_light or sprite_index=spr_ace_heavy or sprite_index=spr_ace_launch) &amp;&amp; !place_meeting(x,y+1,ground)) 
{
sprite_index=spr_ace_jump
attacking=0
}

if((sprite_index=spr_ace_heavyair or sprite_index=spr_ace_lightair or sprite_index=spr_ace_launchair) &amp;&amp; place_meeting(x,y+1,ground)) 
{
sprite_index=spr_ace_idle
freakingslickdash=0
attacking=0
}
if(hitstun&lt;=0 &amp;&amp; attacking!=2 &amp;&amp; blockstun&lt;=0)
{
if(place_meeting(x,y+1,ground))
{

if(light &amp;&amp; (attacking=0 or cancel=1)  &amp;&amp; sprite_index!=spr_ace_downheavy  &amp;&amp; sprite_index!=spr_ace_light &amp;&amp; sprite_index!=spr_ace_heavy &amp;&amp; sprite_index!=spr_ace_launch &amp;&amp; sprite_index!=spr_ace_heavy2 &amp;&amp; sprite_index!=spr_ace_heavy3 &amp;&amp; sprite_index!=spr_ace_heavy4)
{cancel=0
hboxhit=0
hit=2
damage=5
xscal=4
yscal=2
hstun=29
xpos=hsp+20
ypos=65
launchh=false
sprite_index=spr_ace_light
image_index=0
image_speed=0.2
hsp=1
attacking=1
}
if(sprite_index=spr_ace_light &amp;&amp; image_index&gt;6)
{
sprite_index=spr_ace_idle
attacking=0
image_index=0
}

//4th hit
if(heavy &amp;&amp; dashing=0 &amp;&amp; sprite_index=spr_ace_heavy3)
{cancel=0
hboxhit=0
hit=3
damage=13
hstun=40
xscal=4
yscal=2
xpos=hsp+50
ypos=-20
launchh=false
sprite_index=spr_ace_heavy4
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_ace_heavy4 &amp;&amp; image_index=3) {instance_create(x+15*image_xscale,y-15,obj_aceshelleffect);instance_create(x+15*image_xscale,y-15,obj_ace_smokeeffect)}
if(sprite_index=spr_ace_heavy4 &amp;&amp; image_index&gt;7)
{hsp+=3*image_xscale
sprite_index=spr_ace_idle
attacking=0
image_index=0
}
//3rd hit
if(heavy &amp;&amp; dashing=0 &amp;&amp; sprite_index=spr_ace_heavy2)
{cancel=0
hsp=-3*image_xscale
hboxhit=0
hit=2
damage=8
hstun=40
xscal=4
yscal=2
xpos=hsp+50
ypos=26
launchh=false
sprite_index=spr_ace_heavy3
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_ace_heavy3 &amp;&amp; image_index=2) {instance_create(x-5*image_xscale,y+5,obj_aceshelleffect);instance_create(x+10*image_xscale,y+5,obj_ace_smokeeffect)}
if(sprite_index=spr_ace_heavy3 &amp;&amp; image_index&gt;5)
{hsp+=3*image_xscale
sprite_index=spr_ace_idle
attacking=0
image_index=0
}
//2nd hit
if(heavy &amp;&amp; dashing=0 &amp;&amp; cancel=1 &amp;&amp; sprite_index=spr_ace_heavy)
{cancel=0
hboxhit=0
hit=2
damage=10
hstun=30
xscal=4
yscal=2
xpos=hsp+50
ypos=26
launchh=false
sprite_index=spr_ace_heavy2
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_ace_heavy2 &amp;&amp; image_index=2) {instance_create(x+5*image_xscale,y+15,obj_aceshelleffect);instance_create(x+15*image_xscale,y+15,obj_ace_smokeeffect)}
if(sprite_index=spr_ace_heavy2 &amp;&amp; image_index&gt;5)
{hsp+=3*image_xscale
sprite_index=spr_ace_idle
attacking=0
image_index=0
}

if((!left &amp;&amp; image_xscale&lt;0 or !right &amp;&amp; image_xscale&gt;0) &amp;&amp; heavy &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1)  &amp;&amp; sprite_index!=spr_ace_downheavy  &amp;&amp; sprite_index!=spr_ace_launch &amp;&amp; sprite_index!=spr_ace_heavy &amp;&amp; sprite_index!=spr_ace_heavy2 &amp;&amp; sprite_index!=spr_ace_heavy3 &amp;&amp; sprite_index!=spr_ace_heavy4)
{cancel=0
hboxhit=0
hit=3
damage=9
hstun=45
xscal=4
yscal=2
xpos=hsp+28
ypos=-14
launchh=false
sprite_index=spr_ace_heavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_ace_heavy &amp;&amp; image_index&gt;8)
{hsp+=3*image_xscale
sprite_index=spr_ace_idle
attacking=0
image_index=0
}
//slide
if((left &amp;&amp; image_xscale&lt;0 or right &amp;&amp; image_xscale&gt;0) &amp;&amp; heavy &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_ace_launch &amp;&amp; sprite_index!=spr_ace_downheavy &amp;&amp; sprite_index!=spr_ace_heavy2 &amp;&amp; sprite_index!=spr_ace_heavy3 &amp;&amp; sprite_index!=spr_ace_heavy4)
{cancel=0
hboxhit=0
hit=2
damage=3
hstun=45
xscal=8
yscal=2
xpos=hsp+35
ypos=+100
launchh=false
sprite_index=spr_ace_downheavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_ace_downheavy &amp;&amp; image_index=3 &amp;&amp; hit=2) {instance_create(x-8*image_xscale,y+16,obj_dasheffect);hit=3;instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)}
if(sprite_index=spr_ace_downheavy &amp;&amp; image_index=5 &amp;&amp; hit=3) {damage=4;hit=4;instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)}
if(sprite_index=spr_ace_downheavy &amp;&amp; image_index&gt;13)
{hsp+=3*image_xscale
sprite_index=spr_ace_idle
attacking=0
image_index=0
}






if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_ace_downheavy &amp;&amp; sprite_index!=spr_ace_launch &amp;&amp; sprite_index!=spr_ace_heavy2 &amp;&amp; sprite_index!=spr_ace_heavy3)
{hboxhit=0
cancel=0
hit=5
damage=14
hstun=55
xscal=4
yscal=10
xpos=hsp+50
ypos=20
launchh=true
sprite_index=spr_ace_launch
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_ace_launch) launchh=true
if(sprite_index=spr_ace_launch &amp;&amp; image_index&gt;11)
{
sprite_index=spr_ace_idle
attacking=0
image_index=0
}

}
else

{
if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_ace_heavyair &amp;&amp; sprite_index!=spr_ace_launchair  &amp;&amp; sprite_index!=spr_ace_lightair)
{cancel=0
hboxhit=0
hit=2
damage=9
xscal=2
yscal=2
hstun=35
xpos=hsp+30
ypos=+80
launchh=false
sprite_index=spr_ace_lightair
image_index=0
image_speed=0.2

attacking=1
}
if(sprite_index=spr_ace_lightair &amp;&amp; image_index&gt;7)
{
sprite_index=spr_ace_jump
attacking=0
image_index=0
}


if(heavy &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_ace_heavyair &amp;&amp; sprite_index!=spr_ace_launchair &amp;&amp; sprite_index!=spr_ace_light)
{cancel=0
hboxhit=0
hit=2
damage=5
xscal=5
yscal=4
hstun=40
xpos=hsp+30
ypos=+40
launchh=false
sprite_index=spr_ace_heavyair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_ace_heavyair &amp;&amp; image_index&gt;=3 &amp;&amp; hit=2)
{hit=4
instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)
room_speed=60}
if(sprite_index=spr_ace_heavyair &amp;&amp; image_index&gt;=4 &amp;&amp; hit=4)
{hit=5
instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)
room_speed=60}
if(sprite_index=spr_ace_heavyair &amp;&amp; image_index&gt;11)
{
sprite_index=spr_ace_jump
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_ace_launchair)
{cancel=0
hboxhit=0
hit=4
damage=12
xscal=5
yscal=5
hstun=40
xpos=hsp+35
ypos=80
launchh=false
sprite_index=spr_ace_launchair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_ace_launchair &amp;&amp; image_index=4) {instance_create(x+5*image_xscale,y+25,obj_aceshelleffect);instance_create(x+15*image_xscale,y+30,obj_ace_smokeeffect)}
if(sprite_index=spr_ace_launchair &amp;&amp; image_index&gt;12)
{
sprite_index=spr_ace_jump
attacking=0
image_index=0
}

}

if(hitstun=0 &amp;&amp; attacking=true &amp;&amp; image_index&gt;=hit+.5 &amp;&amp; hboxhit=0 &amp;&amp; sprite_index!=spr_ace_fireball  &amp;&amp; sprite_index!=spr_ace_fireball2  &amp;&amp; sprite_index!=spr_ace_fireball3  &amp;&amp; sprite_index!=spr_ace_specsuper1)
{hboxhit=1
if(sprite_index=spr_ace_launchair)
{
with instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox) {HBOXLAUNCH=true;DOWNLAUNCH=true}
}
else instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input
//keep the player out of the wall
if(place_meeting(x,y,ground))
{
if(x&gt;room_width/2) x-=2
else x+=2
}

left=keyboard_check_direct(ord("A"))
right=keyboard_check_direct(ord("D"))
pleft=keyboard_check_pressed(ord("A"))
pright=keyboard_check_pressed(ord("D"))
jump=keyboard_check_direct(ord("W"))
//move left and right
//if(left or right) hsp=round(hsp)
if(dashing=0 &amp;&amp; blockstun&lt;=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0)
    {
    
    if(pleft &amp;&amp; dashdirection=1 &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_ace_dash &amp;&amp; sprite_index!=spr_ace_backdash)
        {
        attacking=2
        if(image_xscale=4) 
            {sprite_index=spr_ace_backdash;with (instance_create(x+16*image_xscale,y,obj_bdasheffect)) image_xscale=-p1.image_xscale}
        
        else
            {sprite_index=spr_ace_dash;with (instance_create(x-16*image_xscale,y,obj_dasheffect)) image_xscale=p1.image_xscale}
        
        image_index=0
        hsp=-dashspd
        dashtime=dashlng
        dashing=1
    }

    if(pleft &amp;&amp; sprite_index!=spr_ace_dash &amp;&amp; sprite_index!=spr_ace_backdash)
        {
        dashtime=15
        dashcheck=1
        dashdirection=1//1 = left; 2 = right
        }

    if(pright &amp;&amp; dashdirection=2 &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_ace_dash &amp;&amp; sprite_index!=spr_ace_backdash )
        {
        attacking=2
        if(image_xscale=4) 
            {sprite_index=spr_ace_dash;with (instance_create(x-16*image_xscale,y,obj_dasheffect)) image_xscale=p1.image_xscale}
            
        else 
            {sprite_index=spr_ace_backdash;with (instance_create(x+16*image_xscale,y,obj_bdasheffect)) image_xscale=-p1.image_xscale}
            
        image_index=0
        hsp=dashspd
        dashtime=dashlng
        dashing=1
        }
    
    if(pright &amp;&amp; sprite_index!=spr_ace_dash &amp;&amp; sprite_index!=spr_ace_backdash)
        {
        dashtime=15
        dashcheck=1
        dashdirection=2//2 = right; 1= left
        }
    
}

if(dashtime&lt;=0 &amp;&amp; (sprite_index==spr_ace_dash or sprite_index==spr_ace_backdash))
    {
    attacking=0
    dashcheck=0
    dashing=0
    sprite_index=spr_ace_idle
    freakingslickdash=0
    dashdirection=0
    }

if(sprite_index=spr_ace_idle) freakingslickdash=0

if(dashtime&gt;0) dashtime-=1

if(dashing=1 &amp;&amp; dashtimerfinal&gt;40 or dashtime&lt;=0 or jump or light or heavy or launch)

    {
    dashing=0
    dashtimerfinal=0
    dashtime=0
    dashcheck=0
    hsp=0
    }

if(dashing=1) dashtimerfinal++

if(grounded=0 &amp;&amp; dashing=0)

    {
    dashcheck=0
    dashing=0
    dashtime=0
    }

//KEY MOVEMENT
if(OTG==false &amp;&amp; hitstun=0)
{

if(attacking==0 &amp;&amp; vsp&lt;-2 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_ace_jump
if(attacking==0 &amp;&amp; vsp&gt;=-2 &amp;&amp; vsp &lt;=1 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_ace_tjump
if(attacking==0 &amp;&amp; vsp&gt;1 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_ace_fall

if(attacking==0 &amp;&amp; hsp==0 &amp;&amp; grounded=1)
{sprite_index=spr_ace_idle}
if(attacking==0 &amp;&amp; grounded=1)
{
if(left &amp;&amp; sign(image_xscale)=1) sprite_index=spr_ace_backwalk
if(left &amp;&amp; sign(image_xscale)=-1) sprite_index=spr_ace_forwalk
if(right &amp;&amp; sign(image_xscale)=1) sprite_index=spr_ace_forwalk
if(right &amp;&amp; sign(image_xscale)=-1) sprite_index=spr_ace_backwalk
if(left &amp;&amp; right) sprite_index=spr_ace_idle
}

}
if((attacking=0 or grounded=0) &amp;&amp; hitstun==0 &amp;&amp; blockstun&lt;=0)
{
if (left)

{
if(hsp&lt;-agi){}
else
{hsp=-agi
if(coward=true &amp;&amp; image_xscale&gt;0) hsp=-agi -2}

}

if (right)
{
if(hsp&gt;agi){}
else
{hsp=agi
if(coward=true &amp;&amp; image_xscale&lt;0) hsp=agi +2}
}
}
//neutral input = 0 movement
if (((right &amp;&amp; left) or (!right &amp;&amp; !left)) &amp;&amp; attacking=0)
{
hsp=0

}

//jumping
if(jump &amp;&amp; blockstun&lt;=0 &amp;&amp; grounded=1 &amp;&amp; (attacking=0 or  attacking=2 &amp;&amp; dashing=1 or cancel=1  &amp;&amp; sprite_index=spr_ace_launch))
{
if(left) airMovementDir = -1;
else if(right) airMovementDir = 1;
else airMovementDir = 0;
grounded=0
if(sprite_index=spr_ace_launch)freakingslickdash=1
vsp=-13
instance_create(x,y+64,obj_jumpeffect)
}


//vertical collision
if (place_meeting (x,y+vsp,ground))
{
    while(!place_meeting(x,y+sign(vsp),ground))
    {
    y+=sign(vsp);
    }
    vsp=0
    grounded = 1;
}



else
{
grounded = 0
}
if grounded == 0// &amp;&amp; hitstun == 0
    hsp = agi * airMovementDir;
    
//light player collision
if(place_meeting(x+hsp,y,p2)) hsp=0
if(image_index&lt;8 &amp;&amp; sprite_index=spr_ace_downheavy &amp;&amp; !place_meeting(x+5*image_xscale,y,p2)) {hsp = round(agi*image_xscale/2)}
else if(attacking=1 &amp;&amp; grounded=1) hsp=0
//horizontal collision   
if place_meeting(x+hsp,y,ground)
{
    if(!place_meeting(x+sign(hsp),y,ground)) hsp+=sign(hsp);
    hsp = 0;
}    
 
//commit to movement
if(gal.hitStop=false)
{
x += hsp;
y += vsp;

vsp+=grav
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special Moves
down=keyboard_check_pressed(ord("S"))
if(hitstun=0 &amp;&amp; OTG=false &amp;&amp; blockstun&lt;=0)
{
//ACE SPECIAL 1: Draw! 
if(keyboard_check_pressed(ord("U")) &amp;&amp; grounded=1 &amp;&amp; attacking!=2 &amp;&amp; abi&gt;0)
{
gal.hitstop=false
gal.HSF=0
if(FBlv=1)linkspr=spr_ace_fireball
if(FBlv=2)linkspr=spr_ace_fireball2
if(FBlv=3)linkspr=spr_ace_fireball3
hit=0;sprite_index=linkspr;image_index=0;abi--;attacking=2
}
//Level One:
if(sprite_index=spr_ace_fireball &amp;&amp; image_index&gt;=4 &amp;&amp; hit=0) {hit=1;instance_create(x+30*image_xscale,y-16,obj_shooteffect);instance_create(x+20*image_xscale,y-16,obj_aceshelleffect);instance_create(x+30*image_xscale,y+-16,obj_ace_smokeeffect);
with(instance_create(x+12*image_xscale,y-16,obj_acefireball))
{
ally=p1
enem=p2
}

}
if(sprite_index=spr_ace_fireball &amp;&amp; image_index&gt;=10) {attacking=0;sprite_index=spr_ace_idle}
//Level Two:
if(sprite_index=spr_ace_fireball2 &amp;&amp; image_index&gt;=4 &amp;&amp; hit=0) {hit=1;instance_create(x+20*image_xscale,y+16,obj_shooteffect);instance_create(x+5*image_xscale,y+15,obj_aceshelleffect);instance_create(x+15*image_xscale,y+15,obj_ace_smokeeffect);
with(instance_create(x+8*image_xscale,y+16,obj_acefireball))
{
ally=p1
enem=p2
vspeed=-1;
angle=5*image_xscale
}

}
if(sprite_index=spr_ace_fireball2 &amp;&amp; image_index&gt;=8) {attacking=0;sprite_index=spr_ace_idle}
//Level Three
if(sprite_index=spr_ace_fireball3 &amp;&amp; image_index&gt;=2 &amp;&amp; hit=0) {hit=1;
with(instance_create(x+12*image_xscale,y-16,obj_ace_grenade))
{
ally=p1
enem=p2
}

}
if(sprite_index=spr_ace_fireball3 &amp;&amp; image_index&gt;=7 &amp;&amp; hit=1) {hit=2;instance_create(x+30*image_xscale,y-16,obj_shooteffect);instance_create(x+20*image_xscale,y-15,obj_aceshelleffect);instance_create(x+35*image_xscale,y-15,obj_ace_smokeeffect);
with(instance_create(x+12*image_xscale,y-16,obj_acefireball))
{
ally=p1
enem=p2
}

}
if(sprite_index=spr_ace_fireball3 &amp;&amp; image_index&gt;=10) {attacking=0;sprite_index=spr_ace_idle}

//ACE SPECIAL 2: Scorhed Earth
if(keyboard_check_pressed(ord("I")) &amp;&amp; grounded=1 &amp;&amp; attacking!=2 &amp;&amp; abi&gt;0)
{
if(RDlv=1)linkspr=spr_ace_spec21
if(RDlv=2)linkspr=spr_ace_spec22
if(RDlv=3)linkspr=spr_ace_fireball3
hit=0;sprite_index=linkspr;image_index=0;abi--;attacking=2
}
//Level One:
if(sprite_index=spr_ace_spec21 &amp;&amp; image_index&gt;=3 &amp;&amp; hit=0) {hit=1;
with(instance_create(x+12*image_xscale,y-16,obj_acebottle1))
{
ally=p1
enem=p2
}

}
if(sprite_index=spr_ace_spec21 &amp;&amp; image_index&gt;=12) {attacking=0;sprite_index=spr_ace_idle}

//Level Two:
if(sprite_index=spr_ace_spec22 &amp;&amp; image_index&gt;=3 &amp;&amp; hit=0) {hit=1;
with(instance_create(x+12*image_xscale,y-16,obj_acebottle2))
{
ally=p1
enem=p2
}

}
if(sprite_index=spr_ace_spec22 &amp;&amp; image_index&gt;=10) {attacking=0;sprite_index=spr_ace_idle}


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blocking

if(!(left &amp;&amp; right) &amp;&amp; (image_xscale&lt;0 &amp;&amp; right or image_xscale&gt;0 &amp;&amp; left) &amp;&amp; (p2.attacking!=0 or instance_exists(proj)) &amp;&amp; global.p1combo=0 &amp;&amp; p2.block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0 &amp;&amp; p2.OTG=false  &amp;&amp; p2.dashing=0)
{
attacking=1
hsp=0
block=1
sprite_index=spr_ace_block
}
if((sprite_index=spr_ace_block) &amp;&amp; p2.attacking=false &amp;&amp; !instance_exists(proj) &amp;&amp; blockstun&lt;=0)
{
attacking=0
block=0
sprite_index=spr_ace_idle
image_blend=c_white
}
if(sprite_index!=spr_ace_block &amp;&amp; sprite_index!=spr_ace_hblock)
{block=0
image_blend=c_white}
if((image_xscale&lt;0 &amp;&amp; !right or image_xscale&gt;0 &amp;&amp; !left) &amp;&amp; block = 1 or block=1 &amp;&amp; sprite_index=spr_ace_hblock)
{block=0
attacking=0}
if(blockstun&gt;0){blockstun--;sprite_index=spr_ace_hblock}
if(sprite_index=spr_ace_block || sprite_index=spr_ace_hblock) {hsp=0;block=1}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Image_index Code (ImagePL)
if(sprite_index!=ImagePL)
{
image_index=0
ImagePL=sprite_index
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(hitstun&gt;0 &amp;&amp; OTG==false &amp;&amp; gal.hitStop=false)
{
hboxhit=1
hitstun--
if(!place_meeting(x,y+1,ground)) sprite_index=spr_ace_hit2
else sprite_index=spr_ace_hit
}
if(hitstun&lt;=0 &amp;&amp; (sprite_index=spr_ace_hit or sprite_index=spr_ace_hit2))
{
hitstun=0
sprite_index=spr_ace_idle
attacking=0
global.p2combo=0
}
if(OTG=false &amp;&amp; global.p2combo!=0 &amp;&amp; hitstun&lt;=0) //Reset Combo gauge if launched
{global.p2combo=0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(dashing=true || attacking=2 || !place_meeting(x,y+1,ground) &amp;&amp; global.p2combo=0 &amp;&amp; global.p1combo!=0  &amp;&amp; (sprite_index=spr_ace_dash or sprite_index=spr_ace_backdash or hsp&lt;-agi or hsp&gt;agi or launchh=true or freakingslickdash=1))
{
freakingslickdash=1
timer++
if(timer&gt;=2)
{
with instance_create(x,y,aftereffect){
image_xscale=p1.image_xscale
image_yscale=p1.image_yscale
sprite_index=p1.sprite_index
image_index=p1.image_index
image_blend=c_black
}
timer=0
}
}
if(place_meeting(x,y+1,ground))
{freakingslickdash=0}
//Outline Code//
if(attacking=0) OutlineCol=c_black
//else if(attacking=2) OutlineCol=c_red
//else if(attacking=3) OutlineCol=c_white
draw_sprite_ext(sprite_index,image_index,x+4,y+4,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x-4,y+4,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x  ,y+4,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x+4,y-4,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x-4,y-4,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x  ,y-4,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x+4,y  ,image_xscale,image_yscale,0,OutlineCol,1)
draw_sprite_ext(sprite_index,image_index,x-4,y  ,image_xscale,image_yscale,0,OutlineCol,1)
//Outline Code//
draw_self()

if(global.roundEnd=1 &amp;&amp; attacking!=3)
{image_speed=0}
else if(gal.hitStop=false)
{image_speed=0.25}
//SUPER
if(global.p1super&gt;0 &amp;&amp; blockstun&lt;=0 &amp;&amp; keyboard_check_pressed(ord("H")) &amp;&amp; grounded=1 &amp;&amp; OTG=false &amp;&amp; hitstun&lt;=0)
{
global.p1super--;
hsp=0
hit=0
attacking=3
global.roundEnd=1
sprite_index=spr_ace_specsuper1
ImagePL=sprite_index
image_index=0
cancel=0
hboxhit=0
damage=5
xscal=4
yscal=5
hstun=90
xpos=hsp+30
ypos=+20
hit=0
launchh=true
global.super=1
}
if(sprite_index=spr_ace_specsuper1)
{
draw_sprite_ext(sprite_index,image_index-1,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,image_yscale,0,OutlineCol,0.6)
draw_sprite_ext(sprite_index,image_index-2,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,image_yscale,0,OutlineCol,0.4)
draw_sprite_ext(sprite_index,image_index-3,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,image_yscale,0,OutlineCol,0.2)

draw_self()
if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index=12)instance_create(x+10*image_xscale,y,obj_acepan)
if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index=18 &amp;&amp; !instance_exists(ftb)) global.roundEnd=0//////
if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=21 &amp;&amp; hit=0){hit=1;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=23 &amp;&amp; hit=1){hit=2;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=24 &amp;&amp; hit=2){hit=3;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=26 &amp;&amp; hit=3){hit=4;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=27 &amp;&amp; hit=4){hit=5;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=29 &amp;&amp; hit=5){hit=6;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=30 &amp;&amp; hit=6){hit=7;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=32 &amp;&amp; hit=7){hit=8;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=33 &amp;&amp; hit=8){hit=9;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=35 &amp;&amp; hit=9){hit=10;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=37 &amp;&amp; hit=10){hit=11;
with(instance_create(x+10*image_xscale,y-50,obj_ace_specbullet))
{
ally=p1
enem=p2
}
instance_create(x+10*image_xscale,y-75,obj_aceshelleffect);instance_create(x+10*image_xscale,y-75,obj_ace_smokeeffect)}

}
if(sprite_index=spr_ace_specsuper1 &amp;&amp; image_index&gt;=38)
{
attacking=0
global.super=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_alta_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>p2</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.2
image_index=0
room_speed=60
attacking=0
OTG=false
image_yscale=4  
global.p2char="Alta"
timer=0
idle=spr_alta_idle//important for resuming round
hsp=0
vsp=0
grav=0.5
grounded=0
hitstun=0
blockstun=0
hboxhit=0
dashtime=0
angle=0
dashdirection=0
ImagePL=0
//special move variables
link=false
linktime=0
linkdir=keyboard_check_direct(vk_up)
linkatk=keyboard_check_direct(vk_up)
linkspr=0
FBlv=1
RDlv=1
//battle variables
agi=5
dashing=0
dashcheck=0
block=0
freakingslickdash=0
dashtimerfinal=0
cancel=0
hp=155
mhp=hp
atk=1
abi=5
mabi=abi
projdef=0
dashlng=13
dashspd=16
rage=false
nKb=false
coward=false
pH=agi
fastSpec=0
use=5
damage=0
hstun=0
hit=0
xpos=0
ypos=0
xscal=1
yscal=1
launchh=false
airMovementDir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OTG (Off the ground)
if(OTG=true)
{hitstun=0}
if(OTG=true &amp;&amp; !place_meeting(x,y+4,ground))
{
hsp=-1*image_xscale
sprite_index=spr_alta_hit3
}

if(OTG=true &amp;&amp; place_meeting(x,y+4,ground) &amp;&amp; attacking!=5)
{
hsp=0
vsp=0
attacking=5
sprite_index=spr_alta_ground
image_index=0
instance_create(x-15,y+80,obj_groundbits)
instance_create(x-20,y+80,obj_groundbits)
instance_create(x-10,y+80,obj_groundbits)
instance_create(x+10,y+80,obj_groundbits)
instance_create(x+20,y+80,obj_groundbits)
instance_create(x+15,y+80,obj_groundbits)

}

if(sprite_index==spr_alta_ground &amp;&amp; image_index&gt;=12)
{
sprite_index=spr_alta_getup
image_index=0
}

if(sprite_index==spr_alta_getup &amp;&amp; image_index&gt;=4)
{
OTG=false
sprite_index=spr_alta_idle
attacking=0
global.p1combo=0
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.roundEnd</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player collison


if(place_meeting(p1.x,p1.y,p2) || place_meeting(p2.x,p2.y,p1))
{
//checks who's closer to the middle
if(abs(p1.x - round(room_width/2)) &lt; abs(p2.x - round(room_width/2)) || p1.y &gt; p2.y)
{
if(p1.x &gt; room_width/2) p1.x-=5
else p1.x+=5
}
else
{
if(p2.x &gt; room_width/2) p2.x-=5
else p2.x+=5
}

}
else
{}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input
//keep the player out of the wall
if(place_meeting(x,y,ground))
{
if(x&gt;room_width/2) x-=2
else x+=2
}

//left=keyboard_check_direct(vk_left)
left=gamepad_button_check(global.gamepadSlot,gp_padl)
//right=keyboard_check_direct(vk_right)
right=gamepad_button_check(global.gamepadSlot,gp_padr)
//pleft=keyboard_check_pressed(vk_left)
pleft=gamepad_button_check_pressed(global.gamepadSlot,gp_padl)
//pright=keyboard_check_pressed(vk_right)
pright=gamepad_button_check_pressed(global.gamepadSlot,gp_padr)
//jump=keyboard_check_direct(vk_up)
jump=gamepad_button_check(global.gamepadSlot,gp_padu)
//move left and right
if(dashing=0 &amp;&amp; block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0 &amp;&amp; blockstun&lt;=0)
    {
    
    if(pleft &amp;&amp; dashdirection=1 &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_alta_dash &amp;&amp; sprite_index!=spr_alta_backdash)
        {
        attacking=2
        if(image_xscale=4) 
            {sprite_index=spr_alta_backdash;with (instance_create(x+16*image_xscale,y,obj_bdasheffect)) image_xscale=-p2.image_xscale}
        
        else
            {sprite_index=spr_alta_dash;with (instance_create(x-16*image_xscale,y,obj_dasheffect)) image_xscale=p2.image_xscale}
        
        image_index=0
        hsp=-dashspd
        dashtime=dashlng
        dashing=1
    }

    if(pleft &amp;&amp; sprite_index!=spr_alta_dash &amp;&amp; sprite_index!=spr_alta_backdash)
        {
        dashtime=17
        dashcheck=1
        dashdirection=1//1 = left; 2 = right
        }

    if(pright &amp;&amp; dashdirection=2 &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_alta_dash &amp;&amp; sprite_index!=spr_alta_backdash )
        {
        attacking=2
        if(image_xscale=4) 
            {sprite_index=spr_alta_dash;with (instance_create(x-16*image_xscale,y,obj_dasheffect)) image_xscale=p2.image_xscale}
            
        else 
            {sprite_index=spr_alta_backdash;with (instance_create(x+16*image_xscale,y,obj_bdasheffect)) image_xscale=-p2.image_xscale}
            
        image_index=0
        hsp=dashspd
        dashtime=dashlng
        dashing=1
        }
    
    if(pright &amp;&amp; sprite_index!=spr_alta_dash &amp;&amp; sprite_index!=spr_alta_backdash)
        {
        dashtime=17
        dashcheck=1
        dashdirection=2//2 = right; 1= left
        }
    
}

if(dashtime&lt;=0 &amp;&amp; (sprite_index==spr_alta_dash or sprite_index==spr_alta_backdash))
    {
    attacking=0
    dashcheck=0
    dashing=0
    sprite_index=spr_alta_idle
    freakingslickdash=0
    dashdirection=0
    }

if(sprite_index=spr_alta_idle) freakingslickdash=0

if(dashtime&gt;0) dashtime-=1

if(dashing=1 &amp;&amp; dashtimerfinal&gt;40 or dashtime&lt;=0 or jump or light or heavy or launch)

    {
    dashing=0
    dashtimerfinal=0
    dashtime=0
    dashcheck=0
    hsp=0
    }

if(dashing=1) dashtimerfinal++

if(grounded=0 &amp;&amp; dashing=0)

    {
    dashcheck=0
    dashing=0
    dashtime=0
    }

//KEY MOVEMENT
if(OTG==false)
{

if(attacking==0 &amp;&amp; vsp&lt;-2 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_alta_jump
if(attacking==0 &amp;&amp; vsp&gt;=-2 &amp;&amp; vsp &lt;=1 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_alta_tjump
if(attacking==0 &amp;&amp; vsp&gt;1 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_alta_fall
if(attacking==0 &amp;&amp; hsp==0 &amp;&amp; grounded=1)
{sprite_index=spr_alta_idle}
if(attacking==0 &amp;&amp; grounded=1)
{
if(left &amp;&amp; sign(image_xscale)=1) sprite_index=spr_alta_backwalk
if(left &amp;&amp; sign(image_xscale)=-1) sprite_index=spr_alta_forwalk
if(right &amp;&amp; sign(image_xscale)=1) sprite_index=spr_alta_forwalk
if(right &amp;&amp; sign(image_xscale)=-1) sprite_index=spr_alta_backwalk
if(left &amp;&amp; right) sprite_index=spr_alta_idle
}

}

if(attacking=0 or grounded=0)
{
if(dashing=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; blockstun&lt;=0)
{
if (left)

{
if(hsp&lt;-agi){}
else
{hsp=-agi
if(coward=true &amp;&amp; image_xscale&gt;0) hsp=-agi -2}

}

if (right)
{
if(hsp&gt;agi){}
else
{hsp=agi
if(coward=true &amp;&amp; image_xscale&lt;0) hsp=agi +2}
}
}
//neutral input = 0 movement
if (((right &amp;&amp; left) or (!right &amp;&amp; !left)))
{
hsp=0

}

}
//jumping
if(jump &amp;&amp; blockstun&lt;=0 &amp;&amp; grounded=1 &amp;&amp; (attacking=0 or dashing=1 &amp;&amp; attacking=2 or cancel=1 &amp;&amp; sprite_index=spr_alta_launch))
{
if(left) airMovementDir = -1;
else if(right) airMovementDir = 1;
else airMovementDir = 0;
if(sprite_index=spr_alta_launch)freakingslickdash=1
grounded=0
vsp=-13
instance_create(x,y+64,obj_jumpeffect)
}


//vertical collision
if (place_meeting (x,y+vsp,ground))
{
    while(!place_meeting(x,y+sign(vsp),ground))
    {
    y+=sign(vsp);
    }
    vsp=0
    grounded = 1;
}



else
{
grounded = 0
}
if grounded == 0// &amp;&amp; hitstun == 0
    hsp = agi * airMovementDir;
    
//light player collision
if(place_meeting(x+hsp,y,p1)) hsp=0
//Stop moving while attacking
if(sprite_index=spr_alta_forheavy &amp;&amp; image_index&gt;=1 &amp;&amp; image_index&lt;=4 &amp;&amp; !place_meeting(x+hsp,y,p1))
{hsp=4*image_xscale}
if(image_index&gt;=0 &amp;&amp; image_index&lt;=1 &amp;&amp; sprite_index=spr_alta_launch  &amp;&amp; !place_meeting(x+(13-image_index)*sign(image_xscale),y,p1)) hsp=2*sign(image_xscale)
else if(attacking=1 &amp;&amp; grounded=1 &amp;&amp; sprite_index!=spr_alta_forheavy) hsp=0

//horizontal collision   
if place_meeting(x+hsp,y,ground)
{
    if(!place_meeting(x+sign(hsp),y,ground)) hsp+=sign(hsp);
    hsp = 0;
}    
 
//commit to movement
if(gal.hitStop=false)
{
x += hsp;
y += vsp;

vsp+=grav
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking
//light=keyboard_check_pressed(ord("Z"))
light=gamepad_button_check_pressed(global.gamepadSlot,gp_face3)
//heavy=keyboard_check_pressed(ord("X"))
heavy=gamepad_button_check_pressed(global.gamepadSlot,gp_face4)
//launch=keyboard_check_pressed(ord("C"))
launch=gamepad_button_check_pressed(global.gamepadSlot,gp_face2)
//face direction
if(grounded=1 &amp;&amp; attacking=0)
{

if(x &gt; p1.x)
{image_xscale=-4}
else
{image_xscale=4}

}

//if(attacking=1 &amp;&amp; place_meeting(x,y+1,ground) &amp;&amp; dashing=0) hsp=0
if((sprite_index=spr_alta_light or sprite_index=spr_alta_heavy or sprite_index=spr_alta_launch or sprite_index=spr_alan_heavydash) &amp;&amp; !place_meeting(x,y+1,ground)) 
{
sprite_index=spr_alta_jump
attacking=0
}

if((sprite_index=spr_alta_heavyair or sprite_index=spr_alta_lightair or sprite_index=spr_alta_launchair) &amp;&amp; place_meeting(x,y+1,ground)) 
{
sprite_index=spr_alta_idle
freakingslickdash=0
attacking=0
}


if(hitstun&lt;=0 &amp;&amp; attacking!=2 &amp;&amp; blockstun&lt;=0)
{
if(place_meeting(x,y+1,ground))
{
//light2
if(light &amp;&amp; (attacking=0 or cancel=1)&amp;&amp; sprite_index=spr_alta_light &amp;&amp; sprite_index!=spr_alta_forheavy)
{cancel=0
hboxhit=0
hit=2
damage=6
xscal=6
yscal=6
hstun=40
xpos=hsp+35
ypos=-13
launchh=false
sprite_index=spr_alta_light2
image_index=0
image_speed=0.2
hsp=1
attacking=1
}
if(sprite_index=spr_alta_light2&amp;&amp; image_index&gt;8)
{
sprite_index=spr_alta_idle
attacking=0
image_index=0
}
if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alta_light2 &amp;&amp; sprite_index!=spr_alta_light&amp;&amp; sprite_index!=spr_alta_heavy &amp;&amp; sprite_index!=spr_alta_launch &amp;&amp; sprite_index!=spr_alta_forheavy)
{cancel=0
hboxhit=0
hit=2
damage=8
xscal=6
yscal=6
hstun=40
xpos=hsp+35
ypos=-13
launchh=false
sprite_index=spr_alta_light
image_index=0
image_speed=0.2
hsp=1
attacking=1
}
if(sprite_index=spr_alta_light&amp;&amp; image_index&gt;7)
{
sprite_index=spr_alta_idle
attacking=0
image_index=0
}


if(heavy &amp;&amp; !(left &amp;&amp; image_xscale=-4 or right &amp;&amp; image_xscale=4) &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1)&amp;&amp; sprite_index!=spr_alta_heavy &amp;&amp; sprite_index!=spr_alta_launch &amp;&amp; sprite_index!=spr_alta_forheavy)
{cancel=0
hboxhit=0
hit=3
damage=15
xscal=7
yscal=3
hstun=40
xpos=hsp+50
ypos=0
launchh=false
sprite_index=spr_alta_heavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_alta_heavy &amp;&amp; image_index&gt;8)
{hsp+=3*image_xscale
sprite_index=spr_alta_idle
attacking=0
image_index=0
}
//eldrich stab
if(heavy &amp;&amp; (left &amp;&amp; image_xscale=-4 or right &amp;&amp; image_xscale=4) &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alta_launch &amp;&amp; sprite_index!=spr_alta_forheavy)
{cancel=0
hboxhit=0
hit=4
damage=20
xscal=6
yscal=10
hstun=45
xpos=hsp+25
ypos=0
launchh=false
sprite_index=spr_alta_forheavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_alta_forheavy &amp;&amp; image_index&gt;12)
{hsp+=3*image_xscale
sprite_index=spr_alta_idle
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alta_launch &amp;&amp; sprite_index!=spr_alta_forheavy)
{hboxhit=0
cancel=0
hit=4
damage=20
hstun=55
xscal=4
yscal=12
xpos=hsp+50
ypos=-20
launchh=true
sprite_index=spr_alta_launch
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
}
if(sprite_index=spr_alta_launch &amp;&amp; image_index&gt;11)
{
sprite_index=spr_alta_idle
attacking=0
image_index=0
}

}
else

{
if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alta_heavyair &amp;&amp; sprite_index!=spr_alta_launchair  &amp;&amp; sprite_index!=spr_alta_lightair)
{cancel=0
hboxhit=0
hit=3
damage=12
xscal=5
yscal=10
hstun=40
xpos=hsp+38
ypos=-37
launchh=false
sprite_index=spr_alta_lightair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_alta_lightair &amp;&amp; image_index&gt;10)
{
sprite_index=spr_alta_jump
attacking=0
image_index=0
}


if(heavy &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alta_heavyair &amp;&amp; sprite_index!=spr_alta_launchair)
{cancel=0
hboxhit=0
hit=4
damage=15
xscal=10
yscal=10
hstun=45
xpos=hsp+5
ypos=0
launchh=false
sprite_index=spr_alta_heavyair
image_index=0
image_speed=0.3
attacking=1
}


if(sprite_index=spr_alta_heavyair &amp;&amp; image_index&gt;12)
{
sprite_index=spr_alta_jump
attacking=0
image_index=0
}



if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alta_launchair)
{cancel=0
hboxhit=0
hit=3
damage=17
xscal=5
yscal=12
hstun=50
xpos=hsp+50
ypos=-5
launchh=false
sprite_index=spr_alta_launchair
image_index=0
image_speed=0.2
attacking=1
}
if(sprite_index=spr_alta_launchair &amp;&amp; image_index&gt;11)
{
sprite_index=spr_alta_jump
attacking=0
image_index=0
}

}

if(hitstun==0 &amp;&amp; attacking=1 &amp;&amp; image_index&gt;=hit+.5 &amp;&amp; hboxhit=0 &amp;&amp; sprite_index!=spr_alta_fireball1 &amp;&amp; sprite_index!=spr_alta_specsuper1)
{hboxhit=1
if(sprite_index=spr_alta_launchair)
{
with instance_create(x+xpos*(image_xscale/2),y+ypos,p2hbox) {HBOXLAUNCH=true;DOWNLAUNCH=true}
}
else instance_create(x+xpos*(image_xscale/2),y+ypos,p2hbox)

}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blocking

if(!(left &amp;&amp; right) &amp;&amp; (image_xscale&lt;0 &amp;&amp; right or image_xscale&gt;0 &amp;&amp; left) &amp;&amp; (p1.attacking!=0 or instance_exists(proj)) &amp;&amp; global.p2combo=0 &amp;&amp; p1.block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0 &amp;&amp; p1.OTG=false &amp;&amp; p1.dashing=0)
{
attacking=1
hsp=0
block=1
sprite_index=spr_alta_block
}
if((sprite_index=spr_alta_block) &amp;&amp; p1.attacking=false &amp;&amp; !instance_exists(proj) &amp;&amp; blockstun&lt;=0)
{
attacking=0
block=0
sprite_index=spr_alta_idle
image_blend=c_white
}
if(sprite_index!=spr_alta_block &amp;&amp; sprite_index!=spr_alta_hblock)
{block=0
image_blend=c_white}
if((image_xscale&lt;0 &amp;&amp; !right or image_xscale&gt;0 &amp;&amp; !left) &amp;&amp; block = 1 or block=1 &amp;&amp; sprite_index=spr_alta_hblock)
{block=0
attacking=0}
if(blockstun&gt;0){blockstun--;sprite_index=spr_alta_hblock}
if(sprite_index=spr_alta_block || sprite_index=spr_alta_hblock) {block=1;hsp=0;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(hitstun&gt;0 &amp;&amp; OTG==false)
{
hboxhit=1
hitstun--
if(!place_meeting(x,y+1,ground)) sprite_index=spr_alta_hit2
else sprite_index=spr_alta_hit
}
if(hitstun&lt;=0 &amp;&amp; (sprite_index=spr_alta_hit or sprite_index=spr_alta_hit2))
{
attacking=0
hitstun=0
sprite_index=spr_alta_idle
global.p1combo=0
}
if(OTG=false &amp;&amp; global.p1combo!=0 &amp;&amp; hitstun&lt;=0) //Reset Combo gauge if launched
{global.p1combo=0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special Moves
down=keyboard_check_pressed(vk_down)
if(hitstun=0 &amp;&amp; OTG=false &amp;&amp; blockstun&lt;=0)
{
//ALTA SPECIAL 1: Void Shift
if(gamepad_button_check_pressed(global.gamepadSlot,gp_shoulderl) &amp;&amp; abi&gt;0 &amp;&amp; attacking!=2)
{
vsp=0
if(FBlv=1)linkspr=spr_alta_spec11
if(FBlv=2)linkspr=spr_alta_spec12
if(FBlv=3)linkspr=spr_alan_fireball2
if(grounded=0)attacking=1;
else attacking=2;
abi--;sprite_index=linkspr;image_index=0;hit=0
airMovementDir = sign(image_xscale) * -1;
}
//Level One:
if(sprite_index=spr_alta_spec11) vsp=0
if(sprite_index=spr_alta_spec11 &amp;&amp; image_index&gt;=5 &amp;&amp; hit=0) {attacking=2;hit=1;if(!place_meeting(x+250*sign(image_xscale),y,ground)) x+=250*sign(image_xscale);y-=50;airMovementDir =0;}
if(sprite_index=spr_alta_spec11 &amp;&amp; image_index&gt;=7 &amp;&amp; hit=1) {hit=2;xpos=0;ypos=0;launchh=false;damage=20;xscal=10;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec11 &amp;&amp; image_index&gt;=12) {attacking=0;sprite_index=spr_alta_idle}

//Level Two:
if(sprite_index=spr_alta_spec12) vsp=0
if(sprite_index=spr_alta_spec12 &amp;&amp; image_index&gt;=4 &amp;&amp; hit=0) 
{
attacking=2;
hit=1;

if(!place_meeting(p1.x-80*sign(image_xscale),y,ground))
{x=p1.x-80;}
else
{x=p1.x+80;}

y-=20;
airMovementDir=0;
}
if(sprite_index=spr_alta_spec12 &amp;&amp; image_index&gt;=6 &amp;&amp; hit=1) {hit=2;xpos=0;ypos=0;launchh=false;damage=22;xscal=10;yscal=4;hstun=75;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec12 &amp;&amp; image_index&gt;=11) {attacking=0;sprite_index=spr_alta_idle}

//ALTA SPECIAL 1: Flurry
if(gamepad_button_check_pressed(global.gamepadSlot,gp_shoulderr) &amp;&amp; abi&gt;0 &amp;&amp; attacking!=2)
{
if(RDlv=1)linkspr=spr_alta_spec21
if(RDlv=2)linkspr=spr_alta_spec22
if(RDlv=3)linkspr=spr_alan_fireball2
attacking=2;abi--;sprite_index=linkspr;image_index=0;hit=0
}
//Level One:
if(sprite_index=spr_alta_spec21 &amp;&amp; image_index&gt;=3 &amp;&amp; hit=0) {hit=1;xpos=0;ypos=0;launchh=false;damage=3;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec21 &amp;&amp; image_index&gt;=4 &amp;&amp; hit=1) {hit=2;xpos=0;ypos=0;launchh=false;damage=3;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec21 &amp;&amp; image_index&gt;=5 &amp;&amp; hit=2) {hit=3;xpos=0;ypos=0;launchh=false;damage=3;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec21 &amp;&amp; image_index&gt;=6 &amp;&amp; hit=3) {hit=4;xpos=0;ypos=0;launchh=false;damage=3;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec21 &amp;&amp; image_index&gt;=7 &amp;&amp; hit=4) {hit=5;xpos=0;ypos=0;launchh=false;damage=5;xscal=12;yscal=4;hstun=45;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec21 &amp;&amp; image_index&gt;=15) {sprite_index=spr_alta_idle;attacking=0}
//Level Two:
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=3 &amp;&amp; hit=0) {hit=1;xpos=0;ypos=0;launchh=false;damage=4;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=4 &amp;&amp; hit=1) {hit=2;xpos=0;ypos=0;launchh=false;damage=4;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=5 &amp;&amp; hit=2) {hit=3;xpos=0;ypos=0;launchh=false;damage=4;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=6 &amp;&amp; hit=3) {hit=4;xpos=0;ypos=0;launchh=false;damage=4;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=7 &amp;&amp; hit=4) {hit=5;xpos=0;ypos=0;launchh=false;damage=4;xscal=12;yscal=4;hstun=50;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=12 &amp;&amp; hit=5) {hit=6;xpos=0;ypos=0;launchh=false;damage=12;xscal=12;yscal=4;hstun=60;instance_create(x+20*image_xscale,y+15,p2hbox)}
if(sprite_index=spr_alta_spec22 &amp;&amp; image_index&gt;=20) {sprite_index=spr_alta_idle;attacking=0}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Image_index Code (ImagePL)
if(sprite_index!=ImagePL)
{
image_index=0
ImagePL=sprite_index
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(dashing=true || attacking=2 || !place_meeting(x,y+1,ground) &amp;&amp; global.p1combo=0 &amp;&amp;  global.p2combo!=0  &amp;&amp;  (sprite_index=spr_alta_dash or sprite_index=spr_alta_backdash or hsp&lt;-agi or hsp&gt;agi or launchh=true or freakingslickdash=1))
{
freakingslickdash=1
timer++
if(timer&gt;=2)
{
with instance_create(x,y,aftereffect){
image_xscale=p2.image_xscale
image_yscale=p2.image_yscale
sprite_index=p2.sprite_index
image_index=p2.image_index
image_blend=c_purple
}
timer=0
}
}
if(place_meeting(x,y+1,ground))
{freakingslickdash=0}

if(global.p2combo=0) freakingslickdash=0

//MAKE SURE TO FREEZE CHARACTERS WHEN NOT USING SUPER
if(global.roundEnd=1 &amp;&amp; attacking!=3)
{image_speed=0}
else if(gal.hitStop=false)
{image_speed=0.25}
//SUPERS
if(global.p2super&gt;0 &amp;&amp; blockstun&lt;=0 &amp;&amp; gamepad_button_check_pressed(global.gamepadSlot,gp_shoulderlb) &amp;&amp; grounded=1 &amp;&amp; OTG=false &amp;&amp; hitstun&lt;=0)
{
global.p2super--;
hboxhit=1
hsp=0
hit=0
attacking=3
global.roundEnd=1
sprite_index=spr_alta_specsuper1
ImagePL=sprite_index
image_index=0
cancel=0
damage=5
xscal=4
yscal=5
hstun=90
xpos=hsp+30
ypos=+20
launchh=true
global.super=2
}
if(sprite_index=spr_alta_specsuper1)
{
draw_sprite_ext(sprite_index,image_index-1,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,image_yscale,0,c_black,0.6)
draw_sprite_ext(sprite_index,image_index-2,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,image_yscale,0,c_black,0.4)
draw_sprite_ext(sprite_index,image_index-3,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,image_yscale,0,c_black,0.2)
}
if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=11 &amp;&amp; hit=0)
{hit=1;instance_create(x-32*image_xscale,y+16,obj_altasuper1A)}
if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=12 &amp;&amp; hit=1)
{hit=2;instance_create(x-32*image_xscale,y+10,obj_altasuper1B)}

if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=13 &amp;&amp; hit=2)
{hit=3;instance_create(x-32*image_xscale,y-48,obj_altasuper1A)}
if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=14 &amp;&amp; hit=3)
{hit=4;instance_create(x-32*image_xscale,y-54,obj_altasuper1B)}

if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=15 &amp;&amp; hit=4)
{hit=5;instance_create(x-32*image_xscale,y-112,obj_altasuper1A)}
if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=16 &amp;&amp; hit=5)
{hit=6;instance_create(x-32*image_xscale,y-118,obj_altasuper1B)}

if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=18){if(!instance_exists(ftb))global.roundEnd=0}

if(sprite_index=spr_alta_specsuper1 &amp;&amp; image_index&gt;=31)
{hit=0;attacking=0;image_speed=0.2;sprite_index=spr_alta_idle}
//Outline Code//
draw_sprite_ext(sprite_index,image_index,x+4,y+4,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x-4,y+4,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x  ,y+4,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x+4,y-4,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x-4,y-4,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x  ,y-4,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x+4,y  ,image_xscale,image_yscale,0,c_black,1)
draw_sprite_ext(sprite_index,image_index,x-4,y  ,image_xscale,image_yscale,0,c_black,1)
//Outline Code//
draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

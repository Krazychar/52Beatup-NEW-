<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_haley_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>p1</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0.2
image_index=0
room_speed=60
image_yscale=4  
idle=spr_alan_idle//important for resuming round
attacking=0
global.p1char="Alan"
hsp=0
vsp=0
block=0
hitstun=0
grav=0.3
grounded=0
hboxhit=0
dashtime=0
angle=0
//special move variables
link=false
linktime=0
linkdir=keyboard_check_direct(vk_up)
linkatk=keyboard_check_direct(vk_up)
linkspr=0
FBlv=1
RDlv=1
GBlv=1
//battle variables
agi=5
dashing=0
dashcheck=0
freakingslickdash=0
dashtimerfinal=0
dashdirection=0
cancel=0
hp=185
mhp=hp
atk=1
abi=4
mabi=abi
projdef=0
dashlng=23
rage=false
nKb=false
coward=false
pH=agi
fastSpec=0
damage=0
hstun=0
hit=0
xpos=0
ypos=0
xscal=1
yscal=1
launchh=false
airMovementDir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.roundEnd</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input
//keep the player out of the wall
if(place_meeting(x,y,ground)){x+=2*image_xscale}

left=keyboard_check_direct(ord("A"))
right=keyboard_check_direct(ord("D"))
pleft=keyboard_check_pressed(ord("A"))
pright=keyboard_check_pressed(ord("D"))
jump=keyboard_check_direct(ord("W"))
//move left and right
//if(left or right) hsp=round(hsp)
if(dashing=0 &amp;&amp; block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=0)
    {
    
    if(pleft &amp;&amp; dashdirection=1 &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_alan_dash &amp;&amp; sprite_index!=spr_alan_backdash)
        {
        attacking=2
        if(image_xscale=4) 
            {sprite_index=spr_alan_backdash;instance_create(x+16*image_xscale,y,obj_bdasheffect)}
        
        else
            {sprite_index=spr_alan_dash;instance_create(x-16*image_xscale,y,obj_dasheffect)}
        
        image_index=0
        hsp=-14
        dashtime=dashlng
        dashing=1
    }

    if(pleft &amp;&amp; sprite_index!=spr_alan_dash &amp;&amp; sprite_index!=spr_alan_backdash)
        {
        dashtime=17
        dashcheck=1
        dashdirection=1//1 = left; 2 = right
        }

    if(pright &amp;&amp; dashdirection=2 &amp;&amp; dashcheck=1 &amp;&amp; sprite_index!=spr_alan_dash &amp;&amp; sprite_index!=spr_alan_backdash )
        {
        attacking=2
        if(image_xscale=4) 
            {sprite_index=spr_alan_dash;instance_create(x-16*image_xscale,y,obj_dasheffect)}
            
        else 
            {sprite_index=spr_alan_backdash;instance_create(x+16*image_xscale,y,obj_bdasheffect)}
            
        image_index=0
        hsp=14
        dashtime=dashlng
        dashing=1
        }
    
    if(pright &amp;&amp; sprite_index!=spr_alan_dash &amp;&amp; sprite_index!=spr_alan_backdash)
        {
        dashtime=17
        dashcheck=1
        dashdirection=2//2 = right; 1= left
        }
    
}

if(dashtime&lt;=0 &amp;&amp; (sprite_index==spr_alan_dash or sprite_index==spr_alan_backdash))
    {
    attacking=0
    dashcheck=0
    dashing=0
    sprite_index=spr_haley_idle
    freakingslickdash=0
    dashdirection=0
    }

if(sprite_index=spr_haley_idle) freakingslickdash=0

if(dashtime&gt;0) dashtime-=1

if(dashing=1 &amp;&amp; dashtimerfinal&gt;40 or dashtime&lt;=0)

    {
    dashing=0
    dashtimerfinal=0
    dashtime=0
    dashcheck=0
    hsp=0
    }

if(dashing=1) dashtimerfinal++

if(grounded=0 &amp;&amp; dashing=0)

    {
    dashcheck=0
    dashing=0
    dashtime=0
    }

if(attacking==0 &amp;&amp; vsp&lt;0 &amp;&amp; !place_meeting(x,y+3,ground)) sprite_index=spr_alan_jump
if(attacking==0 &amp;&amp; hsp==0 &amp;&amp; grounded=1) sprite_index=spr_haley_idle
if(dashing=0 &amp;&amp; attacking=0 &amp;&amp; grounded=1)
{
if(hitstun&lt;=0)
{
if (left)

{
if(hsp&lt;-agi){}
else
{hsp=-agi
if(coward=true &amp;&amp; image_xscale&gt;0) hsp=-agi -2}

}

if (right)
{
if(hsp&gt;agi){}
else
{hsp=agi
if(coward=true &amp;&amp; image_xscale&lt;0) hsp=agi +2}
}
}

//neutral input = 0 movement
if (((right &amp;&amp; left) or (!right &amp;&amp; !left)))
{
hsp=0

}

}
//jumping
if(dashing=0 &amp;&amp; jump &amp;&amp; grounded=1 &amp;&amp; (attacking!=1 or cancel=1 &amp;&amp; sprite_index=spr_alan_launch))
{
if(left) airMovementDir = -1;
else if(right) airMovementDir = 1;
else airMovementDir = 0;
grounded=0
if(sprite_index=spr_alan_launch)
{vsp=-10
instance_create(x,y+64,obj_jumpeffect)}
else
{vsp=-10}
}
if(p2.launch=true &amp;&amp; hitstun&gt;0) airMovementDir = p2.airMovementDir


//vertical collision
if (place_meeting (x,y+vsp,ground))
{
    while(!place_meeting(x,y+sign(vsp),ground))
    {
    y+=sign(vsp);
    }
    vsp=0
    grounded = 1;
}



else
{
grounded = 0
}

if grounded == 0// &amp;&amp; hitstun == 0
    hsp = agi * airMovementDir;
    
//light player collision
if(place_meeting(x+hsp,y,p2)) hsp=0
//horizontal collision   
if place_meeting(x+hsp,y,ground)
{
    if(!place_meeting(x+sign(hsp),y,ground)) hsp+=sign(hsp);
    hsp = 0;
}    
 
//commit to movement 
x += hsp;
y += vsp;

vsp+=grav


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking
light=keyboard_check_pressed(ord("J"))
heavy=keyboard_check_pressed(ord("K"))
launch=keyboard_check_pressed(ord("L"))
//face direction

if(grounded=1 &amp;&amp; attacking=0)
{

if(x &gt; p2.x)
{image_xscale=-4}
else
{image_xscale=4}

}

//if(attacking=1 &amp;&amp; place_meeting(x,y+1,ground) &amp;&amp; dashing=0) hsp=0
if((sprite_index=spr_alan_light or sprite_index=spr_alan_heavy or sprite_index=spr_alan_launch or sprite_index=spr_alan_heavydash) &amp;&amp; !place_meeting(x,y+1,ground)) 
{
sprite_index=spr_alan_jump
attacking=0
}

if((sprite_index=spr_alan_heavyair or sprite_index=spr_alan_lightair or sprite_index=spr_alan_launchair or sprite_index=spr_alan_lightupair) &amp;&amp; place_meeting(x,y+1,ground)) 
{
sprite_index=spr_haley_idle
freakingslickdash=0
attacking=0
}
if(hitstun&lt;=0)
{
if(place_meeting(x,y+1,ground))
{

if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_haley_light &amp;&amp; sprite_index!=spr_alan_heavy &amp;&amp; sprite_index!=spr_haley_launch)
{cancel=0
hboxhit=0
hit=3
damage=8
xscal=2
yscal=1
hstun=30
xpos=hsp+28
ypos=-13
launchh=false
sprite_index=spr_haley_light
image_index=0
image_speed=0.2
hsp=1
attacking=1
angle=0
}
if(sprite_index=spr_haley_light &amp;&amp; image_index&gt;7)
{
sprite_index=spr_haley_idle
attacking=0
image_index=0
}

if((!left &amp;&amp; image_xscale&lt;0 or !right &amp;&amp; image_xscale&gt;0) &amp;&amp; heavy &amp;&amp; dashing=0 &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alan_launch &amp;&amp; sprite_index!=spr_alan_heavy &amp;&amp; sprite_index!=spr_alan_forheavy)
{cancel=0
hboxhit=0
hit=3
damage=15
xscal=2
yscal=1
hstun=36
xpos=hsp+27
ypos=-14
launchh=false
sprite_index=spr_alan_heavy
image_index=0
image_speed=0.2
hsp+=1*image_xscale
attacking=1
angle=0
}
if(sprite_index=spr_alan_heavy &amp;&amp; image_index&gt;8)
{hsp+=3*image_xscale
sprite_index=spr_haley_idle
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_haley_launch)
{hboxhit=0
cancel=0
hit=5
damage=13
hstun=40
xscal=2
yscal=3
xpos=hsp+30
ypos=-40
launchh=true
sprite_index=spr_haley_launch
image_index=0
image_speed=0.2
hsp+=1*image_xscale
angle=90
attacking=1
}
if(sprite_index=spr_haley_launch &amp;&amp; image_index&gt;12)
{
sprite_index=spr_haley_idle
attacking=0
image_index=0
}

}
else

{
if(light &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alan_heavyair &amp;&amp; sprite_index!=spr_alan_launchair  &amp;&amp; sprite_index!=spr_alan_lightair &amp;&amp; sprite_index!=spr_alan_lightupair)
{cancel=0
hboxhit=0
hit=2
damage=8
xscal=3
yscal=2
hstun=35
xpos=hsp+30
ypos=+30
launchh=false
sprite_index=spr_alan_lightair
image_index=0
image_speed=0.2
attacking=1
angle=15
}
if(sprite_index=spr_alan_lightair &amp;&amp; image_index&gt;8)
{
sprite_index=spr_alan_jump
attacking=0
image_index=0
}

if(heavy &amp;&amp; keyboard_check_direct(ord("W"))  &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alan_launchair  &amp;&amp; sprite_index!=spr_alan_lightupair &amp;&amp; sprite_index!=spr_alan_lightair)
{cancel=0
hboxhit=0
hit=2
damage=7
xscal=2
yscal=3
hstun=30
xpos=hsp+20
ypos=20
launchh=false
sprite_index=spr_alan_lightupair
vsp-=2
image_index=0
image_speed=0.2
attacking=1
angle=75
}
if(sprite_index=spr_alan_lightupair &amp;&amp; image_index&gt;13)
{
sprite_index=spr_alan_jump
attacking=0
image_index=0
}

if(heavy &amp;&amp;  !keyboard_check_direct(ord("W")) &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alan_heavyair &amp;&amp; sprite_index!=spr_alan_launchair &amp;&amp; sprite_index!=spr_alan_lightupair)
{cancel=0
hboxhit=0
hit=3
damage=14
xscal=6
yscal=2
hstun=35
xpos=hsp+20
ypos=+40
vsp=-2
launchh=false
sprite_index=spr_alan_heavyair
image_index=0
image_speed=0.2
attacking=1
angle=10
}
if(sprite_index=spr_alan_heavyair &amp;&amp; image_index&gt;9)
{
sprite_index=spr_alan_jump
attacking=0
image_index=0
}

if(launch &amp;&amp; (attacking=0 or cancel=1) &amp;&amp; sprite_index!=spr_alan_launchair)
{cancel=0
hboxhit=0
hit=4
damage=15
xscal=2
yscal=8
hstun=30
xpos=hsp+26
ypos=53
launchh=false
sprite_index=spr_alan_launchair
image_index=0
image_speed=0.2
angle=270
attacking=1
}
if(sprite_index=spr_alan_launchair &amp;&amp; image_index&gt;19)
{
sprite_index=spr_alan_jump
attacking=0
image_index=0
}

}

if(attacking=true &amp;&amp; image_index&gt;=hit &amp;&amp; hboxhit=0 &amp;&amp; sprite_index!=spr_alan_shieldbreak  &amp;&amp; sprite_index!=spr_alan_fireball  &amp;&amp; sprite_index!=spr_alan_fireball2 &amp;&amp; sprite_index!=spr_alan_specsuper1)
{hboxhit=1
instance_create(x+xpos*(image_xscale/2),y+ypos,p1hbox)
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blocking

if((image_xscale&lt;0 &amp;&amp; right or image_xscale&gt;0 &amp;&amp; left) &amp;&amp; (p2.attacking=true or instance_exists(p2proj)) &amp;&amp; global.p1combo=0 &amp;&amp; p2.block=0 &amp;&amp; hitstun&lt;=0 &amp;&amp; attacking=false)
{
attacking=1
hsp=0
block=1
sprite_index=spr_alan_block
}
if(sprite_index=spr_alan_block &amp;&amp; p2.attacking=false &amp;&amp; !instance_exists(p2proj))
{
attacking=0
block=0
sprite_index=spr_haley_idle
image_blend=c_white
}
if(attacking=false)
{block=0
image_blend=c_white}
if((image_xscale&lt;0 &amp;&amp; !right or image_xscale&gt;0 &amp;&amp; !left) &amp;&amp; block=1)
{block=0
attacking=0}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Special Moves (Holy Heck)
down=keyboard_check_pressed(ord("S"))
if(image_xscale&gt;0) 
{
forward="D"
backward="A"
}
else
{
forward="A"
backward="D"
}
//Input Checker
if(link=1 &amp;&amp; linktime&lt;=0) linktime=20
if(link!=0) linktime--
if(link!=0 &amp;&amp; linktime&lt;5) {link=0;linktime=0}
if(link=1 &amp;&amp; linktime&gt;4 &amp;&amp; keyboard_check_pressed(ord(linkdir))) {link=2;linktime=20}
if(abi&gt;0 &amp;&amp; link=2 &amp;&amp; linktime&gt;4 &amp;&amp; keyboard_check_pressed(ord(linkatk))) {abi-=1;attacking=2;sprite_index=linkspr;image_index=0;hit=0}
//FireBall
if(down &amp;&amp; grounded=1 &amp;&amp; link=0 &amp;&amp; attacking!=2)
{
link=1
linkatk="J"
linkdir=forward
if(FBlv=1)linkspr=spr_alan_shieldbreak
if(FBlv=2)linkspr=spr_alan_fireball
if(FBlv=3)linkspr=spr_alan_fireball2
}
//FB1
if(sprite_index=spr_alan_shieldbreak &amp;&amp; image_index&gt;=3 &amp;&amp; hit=0) {hit=1;instance_create(x+12*image_xscale,y-16,obj_alanfireball0)}
if(sprite_index=spr_alan_shieldbreak &amp;&amp; image_index&gt;=8) {attacking=0;sprite_index=spr_alan_idle}
//FB2
if(sprite_index=spr_alan_fireball &amp;&amp; image_index&gt;=4 &amp;&amp; hit=0) {hit=1;instance_create(x+12*image_xscale,y+16,obj_alanfireball);}
if(sprite_index=spr_alan_fireball &amp;&amp; image_index&gt;=13) {attacking=0;sprite_index=spr_alan_idle}
//FB3
if(sprite_index=spr_alan_fireball2 &amp;&amp; image_index&gt;=6 &amp;&amp; hit=0) {xscal=40;yscal=4;damage=5;hstun=15;hit=1;instance_create(x+90*image_xscale,y-16,p1hbox)}
if(sprite_index=spr_alan_fireball2 &amp;&amp; image_index&gt;=7 &amp;&amp; hit=1) {xscal=40;yscal=4;damage=5;hstun=15;hit=2;instance_create(x+90*image_xscale,y-16,p1hbox)}
if(sprite_index=spr_alan_fireball2 &amp;&amp; image_index&gt;=8 &amp;&amp; hit=2) {xscal=40;yscal=4;damage=5;hstun=15;hit=3;instance_create(x+90*image_xscale,y-16,p1hbox)}
if(sprite_index=spr_alan_fireball2 &amp;&amp; image_index&gt;=9 &amp;&amp; hit=3) {xscal=40;yscal=4;damage=5;hstun=15;hit=4;instance_create(x+90*image_xscale,y-16,p1hbox)}

if(sprite_index=spr_alan_fireball2 &amp;&amp; image_index&gt;=18) {attacking=0;sprite_index=spr_alan_idle}

//Tornado Kick
if(down &amp;&amp; link=0 &amp;&amp; attacking!=2)
{
link=1
linkatk="K"
linkdir=forward
if(RDlv=1)linkspr=spr_alan_spec2
}
//FB1
if(sprite_index=spr_alan_spec2 &amp;&amp; image_index&gt;=3 &amp;&amp; hit=0) {vsp=-5;hit=1;instance_create(x+12*image_xscale,y-16,p1hbox)}
if(sprite_index=spr_alan_spec2 &amp;&amp; image_index&gt;=9) {attacking=0;sprite_index=spr_alan_jump}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hit
if(hitstun&gt;0)
{
if grounded == 0
    hsp = 0;
hitstun--
if(!place_meeting(x,y+1,ground)) sprite_index=spr_alan_hit2
else sprite_index=spr_alan_hit
attacking=1
hsp=0
}
if(hitstun&lt;=0 &amp;&amp; (sprite_index=spr_alan_hit or sprite_index=spr_alan_hit2))
{
hitstun=0
sprite_index=spr_haley_idle
attacking=0
global.p2combo=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!place_meeting(x,y+1,ground) &amp;&amp; global.p2combo=0 &amp;&amp; (sprite_index=spr_alan_dash or sprite_index=spr_alan_backdash or hsp&lt;-agi or hsp&gt;agi or launchh=true or freakingslickdash=1))
{
freakingslickdash=1
draw_set_color(c_blue)
draw_sprite_ext(sprite_index,image_index-image_speed,x-hsp*3,y-vsp*3,image_xscale,4,0,c_blue,0.4)
}
if(place_meeting(x,y+1,ground) or (place_meeting(x,y+1,ground) &amp;&amp; attacking=1))
{freakingslickdash=0}

if(keyboard_check_pressed(ord("H")))
{
hit=0
attacking=1
sprite_index=spr_alan_specsuper1
image_index=0
cancel=0
hboxhit=0
damage=5
xscal=4
yscal=5
hstun=90
xpos=hsp+30
ypos=+20
hit=0
launchh=true
global.super=1
}
if(sprite_index=spr_alan_specsuper1)
{
draw_sprite_ext(sprite_index,image_index-1,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,4,0,c_black,0.6)
draw_sprite_ext(sprite_index,image_index-2,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,4,0,c_black,0.4)
draw_sprite_ext(sprite_index,image_index-3,x-(5-hsp*3)*sign(image_xscale),y-vsp*3,image_xscale,4,0,c_black,0.2)
}
draw_self()
if(sprite_index=spr_alan_specsuper1 &amp;&amp; image_index&gt;=19 &amp;&amp; hit=0)
{
hit=1
instance_create(x+10*image_xscale,y,obj_alansuper1)
}

if(sprite_index=spr_alan_specsuper1 &amp;&amp; image_index&gt;=27)
{
attacking=0
global.super=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hitbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time=0
image_xscale=p2.xscal
image_yscale=p2.yscal
unblockable=false;

HBOXLAUNCH=p2.launchh
HBOXDAMAGE=p2.damage
HBOXHSTUN=p2.hstun
DOWNLAUNCH=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed=60
p1.hsp=0
p2.hsp=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time++
if(p1.OTG = false &amp;&amp; place_meeting(x,y,p1) &amp;&amp; room_speed==60 &amp;&amp; p2.hitstun==0 &amp;&amp; (p1.block=false or unblockable=true &amp;&amp; p1.grounded=true))
{

p2.depth=-1
p1.depth=0
p1.image_index=0
camera.x+=HBOXDAMAGE*p2.image_xscale
global.p2combo++
if(p2.attacking!=2)p2.cancel=1
camera.shakeIntensity=round(HBOXDAMAGE*p2.image_xscale/6)
if(camera.shakeIntensity=0) camera.shakeIntensity=1

//room_speed=25
gal.HSF=round(HBOXDAMAGE * 0.75)+2

if(!place_meeting(p1.x+15*p2.image_xscale,p1.y,ground)) p1.x+=round(HBOXDAMAGE/5)*p2.image_xscale
else p2.x-=round(HBOXDAMAGE/5)*p2.image_xscale
if(p2.rage=false) p1.hp-=HBOXDAMAGE+p2.atk
else p1.hp-=HBOXDAMAGE+p2.atk+round((p2.mhp-p2.hp)/75)
p1.hitstun=HBOXHSTUN-(round(global.p2combo*1.5))
//make sure there are no ghost hitboxes
p1.hboxhix=1
//hitColor change
obj_hpbarp2.hitColor=c_red
//death effect
if(p1.hp&lt;=0)
{
instance_create(x,y,obj_winflash)
p2.launch=true
p1.y-=15
p1.OTG=true
}
if(HBOXLAUNCH=false)
{
instance_create(x,y,obj_hiteffect)
}
else {
with instance_create(x,y,obj_launcheffect)
{
image_xscale=p2.image_xscale/2
}

}
if(p2.freakingslickdash=1 &amp;&amp; p2.launch=false)
{
//Continue the air combo
if(p2.y&lt;700) p2.vsp=-3//!place_meeting(p2.x,p2.y+3,ground)) p2.vsp=-3
if(p1.y&lt;700) p1.vsp=-3//!place_meeting(p1.x,p1.y+4,ground)) p1.vsp=-3
}

if(HBOXLAUNCH==true) //Launch to the Air
{
if(p1.block=1) p2.cancel=0
p1.vsp=-13
p1.airMovementDir=p2.image_xscale/8
p1.grounded=0
}

if(DOWNLAUNCH=true)
{
p1.vsp=13
p1.OTG=true
with instance_create(x,y,obj_launcheffect)
{
image_xscale=p2.image_xscale/2
image_yscale=-2
}

}

instance_destroy()
}
////////
if(place_meeting(x,y,p1) &amp;&amp; p1.block=true &amp;&amp; unblockable=false)
{
p1.blockstun=round(HBOXHSTUN/3)
instance_create(p1.x,p1.y,obj_blockeffect)
obj_blockeffect.image_xscale=p1.image_xscale
//Move FARTHER
if(!place_meeting(p1.x+15*p2.image_xscale,y,ground)) p2.x+=round(HBOXDAMAGE/2)*p1.image_xscale
else p1.x-=round(HBOXDAMAGE/2)*p1.image_xscale
//CHIP DAMAGE IF SPECIAL MOVE
if(p2.attacking==2 || p1.grounded=false) p1.hp-=round((HBOXDAMAGE+p2.atk)/3)
}
if(HBOXLAUNCH=false) p2.cancel=1;
if(time&gt;=4) instance_destroy()

if(room_speed=50 &amp;&amp; p1.hsp==0)
{
p2.hsp-=1*image_xscale
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
